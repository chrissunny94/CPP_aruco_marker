<?xml version="1.0"?>
<robot name="rpv1" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="wheelbase" value="0.59960" />
  <xacro:property name="track" value="0.45220" />
  <xacro:property name="wheel_vertical_offset" value="0.03" />
  <xacro:property name="footprint_vertical_offset" value="0" />

  <xacro:property name="wheel_radius" value="0.2" />
  <xacro:property name="wheel_width" value="0.050" />

  <xacro:property name="chassis_length" value="0.5996" />
  <xacro:property name="chassis_width" value="0.4522" />
  <xacro:property name="chassis_height" value="0.2001" />
  <xacro:property name="front_mount_vertical_offset" value="0.05" />
  <xacro:property name="front_mount_horizontal_offset" value="-0.05" />

  <xacro:property name="dummy_inertia" value="1e-09"/>
  <xacro:property name="mount_spacing" value="0.120" />

  <material name="dark_grey"><color rgba="0.2 0.2 0.2 1.0" /></material>
  <material name="light_grey"><color rgba="0.4 0.4 0.4 1.0" /></material>
  <material name="yellow"><color rgba="0.8 0.8 0.0 1.0" /></material>
  <material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>




  <xacro:property name="ur5_enabled" value="false" />
  <xacro:property name="kinect_enabled" value="true" />
  <xacro:property name="sick_enabled" value="false" />
  <xacro:property name="hokuyo_enabled" value="false" />
  <xacro:property name="imu_enabled" value="false" />

                            

  

  <xacro:macro name="wheel" params="prefix *joint_pose">

    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <mesh filename="package://rpv1_description/rpv1/meshes/rpv1-wheel.stl"  radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.477"/>
        <inertia
          ixx="0.0013" ixy="0" ixz="0"
          iyy="0.0024" iyz="0"
          izz="0.0013"/>
      </inertial>
    </link>

    <gazebo reference="${prefix}_wheel_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>

    <joint name="${prefix}_wheel" type="continuous">
      <parent link="chassis_link"/>
      <child link="${prefix}_wheel_link" />
      <xacro:insert_block name="joint_pose" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- In reality, rpv1 has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_wheel">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_actuator">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="front_left">
    <origin xyz="${wheelbase/2-.05} ${track/2+wheel_width+.005} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="front_right">
    <origin xyz="${wheelbase/2-.05} ${-(track/2+wheel_width+.005)} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_left">
    <origin xyz="${-wheelbase/2+.05} ${track/2+wheel_width+.005} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_right">
    <origin xyz="${-wheelbase/2+.05} ${-(track/2+wheel_width+.005)} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>

  <link name="base_link"></link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="chassis_link" />
  </joint>

  <link name="chassis_link">
    <visual>
      <origin xyz="0 0 ${footprint_vertical_offset}" rpy="${PI/2} 0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://rpv1_description/rpv1/meshes/body.STL" scale=".001 .001 .001" size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="dark_grey" />
    </visual>
    <collision>
      <origin xyz="0 0 ${chassis_height/2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>
      <mass value="16.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia
        ixx="0.3136" ixy="-0.0008" ixz="0.0164"
        iyy="0.3922" iyz="-0.0009"
        izz="0.4485"/>
      </inertial>
  </link>

  <link name="fenders_link">
    <visual>
      <origin xyz="0 0 ${footprint_vertical_offset}" rpy="${PI/2} 0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://rpv1_description/rpv1/meshes/rpv1-fenders.stl"/>
      </geometry>
      <material name="yellow" />
    </visual>
  </link>
  <joint name="fenders_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="fenders_link" />
  </joint>

  
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="imu_link" />
  </joint>

  <!-- TODO: Same note as applies to imu_link -->
  <link name="navsat_link">
    <visual>
      <geometry>
        <cylinder radius="0.026" length="0.016" />
      </geometry>
      <origin xyz="0 0 0.008" />
      <material name="black" />
    </visual>
  </link>
  <joint name="navsat_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="navsat_link" />
    <origin xyz="-0.180 0.126 0.1815" />
  </joint>

  <link name="mid_mount"></link>
  <joint name="mid_mount_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="mid_mount" />
    <origin xyz="0 0 ${chassis_height}" />
  </joint>

  <link name="rear_mount"></link>
  <joint name="rear_mount_joint" type="fixed">
    <parent link="mid_mount" />
    <child link="rear_mount" />
    <origin xyz="${-mount_spacing} 0 0" />
  </joint>

  <link name="front_mount"></link>
  <joint name="front_mount_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="front_mount" />
    <origin xyz="${chassis_length/2+front_mount_horizontal_offset} 0 ${chassis_height+front_mount_vertical_offset}" />
  </joint>

  <!-- Bring in simulation data for Gazebo. -->
  <xacro:include filename="$(find rpv1_description)/rpv1/urdf/rpv1.gazebo" />

  <!-- Optional standard accessories, including their simulation data. The rendering
       of these into the final description is controlled by optenv variables, which
       default each one to off.-->
  <xacro:include filename="$(find rpv1_description)/rpv1/urdf/accessories.urdf.xacro" />

  <!-- Optional custom includes.
  <xacro:if value="$(optenv rpv1_URDF_EXTRAS 0)">
    <xacro:include filename="$(env rpv1_URDF_EXTRAS)" />

  </xacro:if> -->
 
<xacro:if value="${kinect_enabled}">
  <xacro:include filename="$(find rpv1_description)/rpv1/sensors/kinect.urdf.xacro" />
  <sensor_kinect parent_frame="front_mount" xyz="0 0 0"  rpy="0 0 0"  />
</xacro:if>

<xacro:if value="${sick_enabled}">
  <xacro:include filename="$(find rpv1_description)/rpv1/urdf/sick_tim55x.urdf.xacro" />
  <sick_tim_55x parent="front_mount" x="0" y="0.1" z="0" rx="${-90*M_PI/180}" ry="0.0" rz="${-90*M_PI/180}" />
</xacro:if>






  <xacro:if value="${ur5_enabled}">
<xacro:include filename="$(find ur_description)/urdf/ur3.urdf.xacro" />
      <xacro:property name="reflect" value="-1" />

  
      <xacro:ur3_robot prefix="ur3_arm_" joint_limited="true"/>

    
      <joint name="ur3_arm_base" type="fixed">
        <parent link="mid_mount" />
        <child link="ur3_arm_base_link" />
        <origin xyz="0 0 0" rpy="0.0 0.0 -1.57" />
      </joint>

    </xacro:if>
           

<xacro:if value="${hokuyo_enabled}">
<xacro:include filename="$(find rpv1_description)/rpv1/urdf/hokuyo.urdf.xacro" />
<sensor_hokuyo parent="front_mount" x="0" y="-0.1" z="0" rx="0" ry="0" rz="0" />
</xacro:if>



</robot>
